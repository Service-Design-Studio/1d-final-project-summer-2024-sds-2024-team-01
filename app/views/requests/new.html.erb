<!DOCTYPE html>
<html lang="en">

<body>
  <div class="container content">
    <div class="card mb-0 custom-card_requests_new header-card_requests_new">
      <div class="card-body header-container_requests_new">
        <a href="/requests" class="btn btn-secondary me-2">
          <i class="bi bi-arrow-left"></i> Back to requests
        </a>
        <h2 class="header-text_requests_new">New Request</h2>
      </div>
    </div>
    <!-- Form Card Container -->
    <div class="card mb-4 custom-card_requests_new">
      <div class="card-body">
        <%= form_with model: @request, url: requests_path, local: true, id: "request-form" do |f| %>
        <!-- Banner Photo Card Container -->
        <div class="card mb-4 custom-card_requests_details">
          <div class="card-body">
            <h5 class="card-title">Banner Photo</h5>
            <div class="text-center">
              <div class="border p-5 upload-box_requests_details" id="upload-box">
                <!-- Image Preview Container -->
                <div id="image-preview_requests_details" class="mb-3">
                  <img id="preview-img_requests_details" src="#" alt="Your image" style="display: none; max-width: 100%; height: auto;" />
                </div>
                <!-- Cropper Container -->
                <div id="cropper-container" style="display: none;">
                  <img id="image-to-crop" src="#" alt="Image for cropping" style="max-width: 100%; height: auto;" />
                  <button id="crop-and-upload" class="btn btn-primary mt-3">Crop and Upload</button>
                </div>
                <!-- Plus Symbol -->
                <i class="bi bi-plus-circle" id="plus-icon_requests_details"></i>
                <!-- File Input for preview and upload -->
                <input type="file" id="file-input-visible" style="display: none;" accept="image/*" />
                <!-- Upload Instructions -->
                <div id="upload-instructions">
                  <p>Jpg or Png, not exceeding 3mb in size</p>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="row mb-3">
          <div class="col-md-6">
            <!-- Hidden File Input for actual form submission -->
            <%= f.file_field :thumbnail, id: "file-input-hidden", style: "display: none;" %>
          </div>
        </div>
        <div class="row mb-3">
          <div class="col-md-6">
            <%= f.label :title, class: "form-label" %>
            <%= f.text_field :title, class: "form-control", placeholder: "A few words will do!", required: true %>
          </div>
          <div class="col-md-6">
            <%= f.label :date, class: "form-label" %>
            <%= f.date_field :date, class: "form-control", placeholder: "When will it be?", required: true %>
          </div>
        </div>
        <div class="row mb-3">
          <div class="col-md-3">
            <%= f.label :category, class: "form-label" %>
            <%= f.select :category, options_for_select(["Manual labour", "Teaching", "Delivery"], selected: ""), { prompt: "Choose..." }, { class: "form-control", required: true } %>
          </div>
          <div class="col-md-3">
            <%= f.label :number_of_pax, "Number of volunteers needed:", class: "form-label" %>
            <%= f.number_field :number_of_pax, class: "form-control", required: true, min: 1 %>
          </div>
          <div class="col-md-3">
            <%= f.label :start_time, class: "form-label" %>
            <%= f.time_field :start_time, class: "form-control", placeholder: "Time of the event", required: true, id: "start_time" %>
          </div>
          <div class="col-md-3">
            <%= f.label :duration, class: "form-label" %>
            <%= f.number_field :duration, class: "form-control", placeholder: "How many hours?", required: true, min: 1 %>
          </div>
        </div>
        <!-- Location Input Field -->
        <div class="col-md-12 mb-3">
          <%= f.label :location, class: "form-label" %>
          <%= f.text_field :location, class: "form-control", placeholder: "Enter the address", required: true, id: "location" %>
        </div>

        <!-- Hidden Fields for Latitude and Longitude -->
        <div class="col-md-12 mb-3">
          <%= f.hidden_field :latitude, id: "latitude" %>
          <%= f.hidden_field :longitude, id: "longitude" %>
        </div>

        <div class="col-md-12 mb-3">
          <%= f.label :description, class: "form-label" %>
          <%= f.text_area :description, class: "form-control", rows: 6, placeholder: "Describe your request!", required: true %>
        </div>
        <!-- Incentive provided -->
        <div class="input-group mb-3 mt-3">
          <div class="input-group-prepend">
            <label class="input-group-text rounded-start" for="request_reward_type">Incentive provided</label>
          </div>
          <%= f.select :reward_type, options_for_select(["None", "Money", "Service"], selected: "None"), { class: "form-control", required: true, id: "request_reward_type" } %>
        </div>
        <div class="form-group mt-3">
          <%= f.text_area :reward, class: "form-control", rows: 3, placeholder: "If you are providing an incentive, please describe it here!", id: "request_reward", disabled: true %>
        </div>
        <div class="d-flex justify-content-end mt-3">
          <%= f.submit "Create", class: "btn custom-btn-lilac" %>
        </div>
        <% end %>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAmJgdI9NNTfvR-syec5qEbIBnSVoqKe6I&libraries=places"></script>
  <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
  <script src="https://unpkg.com/cropperjs"></script>

  <script>
    document.getElementById('request_reward_type').addEventListener('change', function() {
      const rewardType = document.getElementById('request_reward_type').value;
      const rewardField = document.getElementById('request_reward');

      if (rewardType === 'None') {
        rewardField.disabled = true;
        rewardField.value = '';
      } else {
        rewardField.disabled = false;
      }
    });

    // Trigger change event on page load to set the initial state of the reward field
    document.getElementById('request_reward_type').dispatchEvent(new Event('change'));

    let cropper;
    const fileInputVisible = document.getElementById('file-input-visible');
    const previewImg = document.getElementById('preview-img_requests_details');
    const plusIcon = document.getElementById('plus-icon_requests_details');
    const hiddenFileInput = document.getElementById('file-input-hidden');
    const cropperContainer = document.getElementById('cropper-container');
    const cropAndUploadButton = document.getElementById('crop-and-upload');
    const uploadInstructions = document.getElementById('upload-instructions');

    plusIcon.addEventListener('click', function() {
      fileInputVisible.click();
    });

    fileInputVisible.addEventListener('change', function(event) {
      const file = event.target.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = function(e) {
          document.getElementById('image-to-crop').src = e.target.result;
          cropperContainer.style.display = 'block';
          previewImg.style.display = 'none';
          plusIcon.style.display = 'none'; // Hide the plus icon
          uploadInstructions.style.display = 'none'; // Hide the upload instructions

          if (cropper) {
            cropper.destroy();
          }
          cropper = new Cropper(document.getElementById('image-to-crop'), {
            aspectRatio: 16 / 9,
            viewMode: 1,
          });
        };
        reader.readAsDataURL(file);
      }
    });

    cropAndUploadButton.addEventListener('click', function() {
      if (cropper) {
        const canvas = cropper.getCroppedCanvas({
          width: 1600,
          height: 900,
        });
        canvas.toBlob(function(blob) {
          const url = URL.createObjectURL(blob);
          previewImg.src = url;
          previewImg.style.display = 'block';
          cropperContainer.style.display = 'none';

          const dataTransfer = new DataTransfer();
          const file = new File([blob], 'cropped-image.jpg', { type: 'image/jpeg' });
          dataTransfer.items.add(file);
          hiddenFileInput.files = dataTransfer.files;
        }, 'image/jpeg');
      }
    });

    function initAutocomplete() {
      const input = document.getElementById('location');
      const autocomplete = new google.maps.places.Autocomplete(input);

      autocomplete.addListener('place_changed', function() {
        const place = autocomplete.getPlace();
        if (!place.geometry) {
          // User entered the name of a Place that was not suggested and pressed the Enter key,
          // or the Place Details request failed.
          return;
        }

        const latitude = place.geometry.location.lat();
        const longitude = place.geometry.location.lng();
        const pointFormat = `POINT(${longitude} ${latitude})`;

        // Set the hidden fields for latitude and longitude
        document.getElementById('latitude').value = latitude;
        document.getElementById('longitude').value = longitude;

        // Set the formatted point in the location field for submission
        document.getElementById('location').value = pointFormat;
      });
    }

    // Initialize Google Maps Autocomplete
    google.maps.event.addDomListener(window, 'load', initAutocomplete);


    // Initialize Flatpickr for time picker
    flatpickr("#start_time", {
      enableTime: true,
      noCalendar: true,
      dateFormat: "H:i",
      time_24hr: true
    });
  </script>
</body>

</html>
